#!/usr/bin/env node
/**
 * This script inlines the bundled React component into the TypeScript source
 * so it can be deployed to Cloudflare Workers.
 *
 * Run this after building the React widget:
 * cd web && npm run build && cd .. && node scripts/inline-react-widget.js
 */

import { readFileSync, writeFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const projectRoot = join(__dirname, '..');
const bundledComponentPath = join(projectRoot, 'web/dist/component.js');
const outputPath = join(projectRoot, 'src/components/react-widget-inline.ts');

try {
  console.log('üì¶ Reading bundled React component...');
  const bundledComponent = readFileSync(bundledComponentPath, 'utf-8');

  console.log(`‚úÖ Read ${bundledComponent.length} characters`);

  // Escape only closing script tags - no need to escape the bundle itself
  const escaped = bundledComponent.replace(/<\/script>/gi, "</scr\" + \"ipt>");

  const output = `// AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
// Generated by: node scripts/inline-react-widget.js
// Source: web/dist/component.js

export const BUNDLED_REACT_COMPONENT = ${JSON.stringify(escaped)};
`;

  console.log('üíæ Writing inlined component...');
  writeFileSync(outputPath, output, 'utf-8');

  console.log('‚úÖ Successfully inlined React component!');
  console.log(`üìÑ Output: ${outputPath}`);
} catch (error) {
  console.error('‚ùå Error inlining React component:', error.message);
  process.exit(1);
}
